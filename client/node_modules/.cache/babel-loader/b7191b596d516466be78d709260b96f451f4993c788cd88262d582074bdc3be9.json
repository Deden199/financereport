{"ast":null,"code":"var _jsxFileName = \"/Users/atiomacbook/Documents/finance/finance123/client/src/pages/Toko.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Paper, Table, TableHead, TableRow, TableCell, TableBody, Typography } from '@mui/material';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Toko() {\n  _s();\n  const [tokoData, setTokoData] = useState([]);\n  const fetchToko = async () => {\n    try {\n      // misal GET /finance/toko\n      const res = await api.get('/finance/toko');\n      setTokoData(res.data);\n    } catch (err) {\n      console.error(err);\n      alert('Gagal fetch data Toko');\n    }\n  };\n  useEffect(() => {\n    fetchToko();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      sx: {\n        fontWeight: 700,\n        mb: 2\n      },\n      children: \"Data Toko\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Nama\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Modal Awal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: tokoData.map(t => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: t.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: t.nama\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: t.modalAwal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)]\n          }, t.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Toko, \"WLlfTqtvVgS+Anr2mhOahL4G8HQ=\");\n_c = Toko;\nvar _c;\n$RefreshReg$(_c, \"Toko\");","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","Table","TableHead","TableRow","TableCell","TableBody","Typography","api","jsxDEV","_jsxDEV","Toko","_s","tokoData","setTokoData","fetchToko","res","get","data","err","console","error","alert","children","variant","sx","fontWeight","mb","fileName","_jsxFileName","lineNumber","columnNumber","p","map","t","id","nama","modalAwal","_c","$RefreshReg$"],"sources":["/Users/atiomacbook/Documents/finance/finance123/client/src/pages/Toko.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Paper, Table, TableHead, TableRow, TableCell, TableBody, Typography } from '@mui/material';\nimport api from '../services/api';\n\nexport default function Toko() {\n  const [tokoData, setTokoData] = useState([]);\n\n  const fetchToko = async() => {\n    try {\n      // misal GET /finance/toko\n      const res = await api.get('/finance/toko');\n      setTokoData(res.data);\n    } catch(err) {\n      console.error(err);\n      alert('Gagal fetch data Toko');\n    }\n  };\n\n  useEffect(()=>{\n    fetchToko();\n  },[]);\n\n  return (\n    <Box>\n      <Typography variant=\"h5\" sx={{ fontWeight:700, mb:2 }}>Data Toko</Typography>\n      <Paper sx={{ p:2 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Nama</TableCell>\n              <TableCell>Modal Awal</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tokoData.map((t)=>(\n              <TableRow key={t.id}>\n                <TableCell>{t.id}</TableCell>\n                <TableCell>{t.nama}</TableCell>\n                <TableCell>{t.modalAwal}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    </Box>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}